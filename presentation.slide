# Go Templates

Great Library, Bad Rap

Carson Anderson
DevX Engineer, Weave
@carson_ops

https://github.com/carsonoid/talk-gowest2020-go-types


## TODO

* Parse tree?

## Introduction

Setup:

* `import "text/template"`
* `import "html/template"`

> Be wary of auto-importing in your IDE. These packages have near-identical
> interfaces but will handle values differently

Almost everything in this talk applies to both but most examples will use `text/template`

## How do I use it?

## Introduction

.code examples/intro.go /START new/,/END new/

## Introduction

.code examples/intro.go /START new/,/END new/
.code examples/intro.go /START parse/,/END parse/


## Introduction

.code examples/intro.go /START new/,/END new/
.code examples/intro.go /START parse/,/END parse/
.play examples/intro.go /START execute/,/END execute/

## Introduction - Compact

`template` functions can be chained to simplify the code.

 For this hard-coded use case we can also ignore the errors.

.play examples/basic.go

## Introduction - Minimal

`template.Must` is a helper that allows for easy package var assignment and one-liners. It ensures a panic on any parse error.

.play examples/basic-minimal.go

## Text vs HTML Template

html template will always parse rendered values to be html safe

.play examples/basic-minimal-html.go

## Large Static Templates

Large and complex templates get ugly

.play examples/large-template-pre.go

## Large Static Templates

Even in a constant

.play examples/large-template.go

## Large Static Templates

You can of course load them from a file:

.play examples/parsefile.go

## Large Static Templates

With go 1.16+ they can easily be embedded into your binary!

`templates/hello.tmpl`

.code templates/hello.tmpl

## Large Static Templates

Thanks `go:embed`!

.play examples/embed.go

## Multiple Templates

What if I have multiple templates?

Do I have to parse or embed them one at a time?

Of course not!

## Advanced: ParseGlob - Load multiple files at once!

.play examples/parseglob.go

## Advanced: ParseFS - go:embed helps again!

.play examples/embed-fs.go

## Onto the Template Language!

## Simple Pipelines ( Printing )

Data:

.code examples/pipelines.go /START DATA OMIT/,/END DATA OMIT/

Template:

.play examples/pipelines.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/

## Seem familiar?

Data:

.code examples/pipelines-print.go /START DATA OMIT/,/END DATA OMIT/

Code:

.play examples/pipelines-print.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/

## But Why "Pipelines"?

Data:

.code examples/pipelines-intro-1.go /START DATA OMIT/,/END DATA OMIT/

Templates:

.play examples/pipelines-intro-1.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/
.play examples/pipelines-intro-3.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/
.play examples/pipelines-intro-2.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/
.play examples/pipelines-intro-4.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/

## Whitespace, Oh My!
  * Top level chomp confusion example

## Context, Context, Context

Data:

.code examples/context.go /START DATA OMIT/,/END DATA OMIT/

Template:

.play examples/context.go /START TEMPLATE OMIT/,/END TEMPLATE OMIT/

## Variables

## Logic: Loops, conditionals
  * variable breakouts

## Using FuncMaps to hide complexity

## Helper libraries
  * sprig

## includes and sub-templates
  * Show `tuple` trick for args
  * Show `with` trick to re-parent

## Better editing with `go embed`

## Bigginner vs Pro

## text/template vs html/template

Contextually-aware escaping of html content renders

## Other language's templates
  * Handlebars: Javascript
  * Mustache: MANY
  * JinjaX: Python
  * ERB: Ruby

## More Go template systems
  * Hugo

## What would I like to see?


## Advanced Usage - Multiple Templates

.play examples/multiple.go
